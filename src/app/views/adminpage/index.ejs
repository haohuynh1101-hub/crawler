<!DOCTYPE html>
<html>

<!-- Mirrored from coderthemes.com/adminto/vertical_dark/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 21 Mar 2019 13:14:52 GMT -->

<head>
  <% include ../partials/head %>

</head>


<body class="fixed-left">

  <!-- Begin page -->
  <div id="wrapper">

    <% include ./changePassword-modal %>
    <!-- Top Bar Start -->
    <% include ../partials/topbar %>

    <!-- Top Bar End -->


    <!-- ========== Left Sidebar Start ========== -->
    <!-- Left Sidebar End -->



    <!-- ============================================================== -->
    <!-- Start right Content here -->
    <!-- ============================================================== -->
    <div class="content-page ml-0">

      <!-- Start content -->
      <div class="content">
        <div class="container">
          <div class=card>
            <div class='card-body' style="color:red"><b>Số traffic còn lại : <span><%- monthlyTraffic%></b></span></div>
          </div>
          <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
              <% if (role.canSuggest) { %>
              <a class="nav-item nav-link active" id="nav-suggest-tab" data-toggle="tab" href="#suggest" role="tab"
                aria-controls="suggest" aria-selected="true">Suggest</a>
              <% } %>
              <% if (role.canBacklink) { %>
              <a class="nav-item nav-link " id="nav-click-backlink-tab" data-toggle="tab" href="#click-backlink"
                role="tab" aria-controls="click-backlink" aria-selected="false">Click Backlink</a>
              <% } %>
              <% if (role.canClickAD) { %>
              <a class="nav-item nav-link " id="nav-click-ad-tab" data-toggle="tab" href="#click-ad" role="tab"
                aria-controls="click-ad" aria-selected="false">Click Ad</a>
              <% } %>
              <% if (role.canIndex) { %>
              <a class="nav-item nav-link " id="nav-index-tab" data-toggle="tab" href="#indexlink" role="tab"
                aria-controls="index" aria-selected="false">Index link</a>
              <% } %>

            </div>
          </nav>

          <div class="tab-content" id="nav-tabContent">
            <% if (role.canSuggest) { %>
            <% include ./feature-partials/suggest/suggest %>
            <% } %>

            <% if (role.canBacklink) { %>
            <% include ./feature-partials/click-backlink/click-backlink %>
            <% } %>

            <% if (role.canClickAD) { %>
            <% include ./feature-partials/click-ad/click-ad %>
            <% } %>

            <% if (role.canIndex) { %>
            <% include ./feature-partials/indexlink/index %>
            <% } %>


          </div>
        </div> <!-- container -->

        <!-- ============================================================== -->
        <!-- End Right content here -->
        <!-- ============================================================== -->


        <!-- Right Sidebar -->
        <!-- /Right-bar -->

        <!-- ============================================================== -->
        <!-- End Right content here -->
        <!-- ============================================================== -->


        <!-- Right Sidebar -->
        <!-- /Right-bar -->

      </div>
      <!-- END wrapper -->

      <% include ./modal-setTimer %>

      <% include ../partials/scripts %>
      <script src="/socket.io/socket.io.js"></script>

      <script src="/assets/js/jquery.blockUI.js"></script>

      <!-- set up stay current tab when reload -->
      <script>
        $(document).ready(function () {
          $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {
            localStorage.setItem('activeTab', $(e.target).attr('href'));
          });
          var activeTab = localStorage.getItem('activeTab');
          if (activeTab) {
            $('#nav-tab a[href="' + activeTab + '"]').tab('show');
          }
        });
      </script>

      <!-- block youtube function-->
      <script>
        /*
        * arr: array of link
        * return : true(ok) || false (one of links is youtube)
        */
        const filterYoutube = (arr) => {

          for (let i = 0; i < arr.length; i++) {

            if (arr[i].includes('youtube.com'))
              return false;
          }
          return true;
        }
      </script>

      <script>
        var selectedId = '';
        //save selected project id in javascript tag to use later
        const saveID = (id) => {
          selectedId = id;
        }
      </script>

      <script>

        /*
        * stringify keyword before submit
        */
        $('#edit-suggest-form').submit(() => {
          let keyword = $('#suggestKeyword-edit').val().split('\n');

          let tempKeyword = [];
          keyword.forEach(element => {
            if (element !== "")
              tempKeyword.push(element);
          });
          keyword = [...tempKeyword];
          keyword = JSON.stringify(keyword);

          $('#suggestKeyword-edit').val(keyword);
        })

        const loadSuggestProjectToModal = (id) => {

          $('#edit-suggest-form').attr('action', `/editSuggest/${id}`);

          $.get(`/project/${id}`).done(function (data) {

            console.log("TCL: loadSuggestProjectToModal -> data", data)
            $('#projectName-suggest-edit').val(data.name);

            $('#domain-suggest-edit').val(data.domain);
            $('#suggestTime-edit').val(data.amount);
            $('#searchingTools-edit').val(data.searchTool);
            $('#delay-suggest-edit').val(data.delay);

            data.keyword.map(item => {

              $('#suggestKeyword-edit').val($('#suggestKeyword-edit').val() + `\n${item}`);
            })
          })
        }


      </script>

      <script>
        const clearLogSuggest = (id) => {

          $.post(`/clearLogSuggest/${id}`,
            {

            },
            function (data, status) {

            });
        }

        const clearLogBacklink = (id) => {

          $.post(`/clearLogBacklink/${id}`,
            {

            },
            function (data, status) {

            });
        }

        const clearLogAD = (id) => {

          $.post(`/clearLogAD/${id}`,
            {

            },
            function (data, status) {

            });
        }

      </script>
      <script>

        /*
        * stringify data url backlink before submit
        */
        $('#edit-backlink-modal').submit(() => {

          let urlBacklink = $('#edit-url_backlink').val().split('\n');
          urlBacklink.splice(0, 1);
          urlBacklink = JSON.stringify(urlBacklink);
          $('#edit-url_backlink').val(urlBacklink);
        })

        const loadBacklinkDataToModalEdit = (id) => {

          $('#edit-backlink-form').attr('action', `/editBacklink/${id}`);

          $.get(`/backlinkproject/${id}`).done(function (data) {

            $('#edit-main_url').val(data.mainURL);
            $('#edit-projectName_backlink').val(data.name);
            $('#edit-delay_backink').val(data.delay);
            $('#edit-amount_backlink').val(data.amount);

            data.urlBacklink.map(item => {
              $('#edit-url_backlink').val($('#edit-url_backlink').val() + `\n${item}`);
            })

          })
        }
      </script>

      <script>

        /*
        * stringify ad url before submit
        */
        $('#edit-ad-form').submit(() => {

          let adURL = $('#edit-ad_url').val().split('\n');
          adURL.splice(0, 1);
          adURL = JSON.stringify(adURL);
          $('#edit-ad_url').val(adURL);
        })

        const loadADToModalEdit = (id) => {

          $('#edit-ad-form').attr('action', `/editAD/${id}`);

          $.get(`/ad/${id}`).done(function (data) {
            $('#edit-projectName_ad').val(data.name);
            $('#edit-main_url_ad').val(data.domain);
            $('#edit-delay_ad').val(data.delay);
            $('#edit-amount_ad').val(data.amount);

            data.adURL.map(item => {

              $('#edit-ad_url').val($('#edit-ad_url').val() + `\n${item}`);
            })

          })
        }
      </script>

      <script>
        const loaduserIDToForm = () => {

          $('#userid-index').attr('value', localStorage.getItem('userid'));
        }
      </script>
      <!-- load data to index link project when view detail -->
      <script>
        const loadDataIndexlink = (id) => {

          $.get(`/indexlink/${id}`, function (res, status) {

            $('#view-name-indexlink').val(res.data.name);

            res.data.links.map(link => {
              $('#view-links-indexlink').val($('#view-links-indexlink').val() + `\n${link}`);
            })
          });
        }
      </script>

      <script>
        const deleteIndexlink = (id) => {

          $.post(`/deleteIndexlink/${id}`,
            {

            },
            function (data, status) {
              window.location.reload();
            });
        }
      </script>



      <script>

        const updateProjectSuggest = (id) => {

          // let name = $('#projectName-suggest-edit').val();
          // let domain = $('#domain-suggest-edit').val();
          // let delay = $('#delay-suggest-edit').val();
          // let amount = $('#suggestTime-edit').val();
          // let searchingTool = $('#searchingTools-edit').val();

          // let keyword = $('#suggestKeyword-edit').val().split('\n');
          // keyword.splice(0, 1);
          // let keyword = JSON.stringify(keyword);

          // console.log(name)
          // console.log(domain)
          // console.log(delay)
          // console.log(amount)
          // console.log(searchingTool)
          // console.log(keyword)
        }
      </script>
      <script>
        //these functions is just a supporters to pass project id to main functions berfore run
        const scheduleSupportRunSuggest = () => {
          let validate = validateTimeSuggest();
          if (validate.err) {
            alert("Vui lòng nhập " + validate.message);
            return false;
          }
          alert(`Đã lên lịch chạy lúc : ${$('#clock_suggest').val()} ${$('#date_suggest').val()}`);
          runSuggestTool(selectedId, false);
        }
        const scheduleSupportRunBacklink = () => {
          let validate = validateTimeRunBacklink();
          if (validate.err) {
            alert("Vui lòng nhập " + validate.message);
            return false;
          }
          alert(`Đã lên lịch chạy lúc : ${$('#clock_backlink').val()} ${$('#date_backlink').val()}`);
          runBackLinkTool(selectedId, false);
        }
        const scheduleSupportRunAD = () => {
          let validate = validateTimeRunAD();
          if (validate.err) {
            alert("Vui lòng nhập " + validate.message);
            return false;
          }
          alert(`Đã lên lịch chạy lúc : ${$('#clock_ad').val()} ${$('#date_ad').val()}`);
          runAdLinkTool(selectedId, false);
        }
      </script>
      <script async>
        var socket = io('https://seo.seotuts.vn/', { 'transports': ['websocket', 'polling'] });

        const validateChangePassword = () => {
          let oldPassword = $("#oldPassword");
          let newPassword = $('#newPassword');
          return (CheckValide([oldPassword, newPassword]));
        }

        const changePassword = () => {

          console.log('change func')
          let validate = validateChangePassword();

          if (validate.err) {

            alert(`Vui lòng nhập ${validate.message} `);
          }
          else {

            let oldPassword = $("#oldPassword").val();
            console.log("TCL: changePassword -> oldPassword", oldPassword)
            let newPassword = $('#newPassword').val();

            $.post("/changePassword",
              {
                oldPassword: oldPassword,
                newPassword: newPassword
              },
              function (data, status) {

                if (data == 'wrong password') {
                  alert('Mật khẩu cũ không chính xác !!!');
                }
                else {

                  alert('Đổi mật khẩu thành công');
                  location.reload();
                }
              });
          }

        }

        socket.on('server-send-current-useragent', (data) => {
          $(`span[agent="${data.projectId}"]`).text(data.data);
          appendLog(data.projectId, 'Thay đổi User Agent thành công');
        })

        socket.on('server-send-current-url', (data) => {
          appendLog(data.projectId, data.url);
          appendLog(data.projectId, 'Đang lả lướt trên trang ...')
        })

        socket.on('not found url', (projectId) => {
          appendLog(projectId, "Không tìm thấy url hoặc title khớp với truy vấn ở thiết bị đang giả lập, đang chuyển sang thiết bị khác ...");
        })

        socket.on('invalid-query', () => {
          appendLog('Tiêu đề hoặc URL đã nhập không khớp với bất kì kết quả tìm kiếm nào, vui lòng thử lại !');
          alert('Tiêu đề hoặc URL đã nhập không khớp với bất kì kết quả tìm kiếm nào, vui lòng thử lại !')
        })
        socket.on('changing-agent', (projectId) => {
          appendLog(projectId, 'Đang thay đổi User Agent ...');
        })
        socket.on('go-google', (projectId) => {
          console.log('dang den google')
          appendLog(projectId, "https://www.google.com/");
        })

        socket.on('send-goto-googlevn', (projectId) => {
          appendLog(projectId, "https://www.google.com.vn/");
        })

        socket.on('close-brower', (projectId) => {
          appendLog(projectId, 'Đang đóng trình duyệt ...')
        })

        socket.on('not-enough-traffic', (projectId) => {
          appendLog(projectId, 'Đã hết  traffic  !!!');
          alert('Đã hết traffic  !!!');
        })

        socket.on('not-enough-link', (projectId) => {
          appendLog(projectId, 'Không đủ links, vui lòng liên hệ admin để mở thêm !!!');
          alert('Không đủ links, vui lòng liên hệ admin để mở thêm !!!');
        })


      </script>

      <script async>
        socket.on('next-page', (projectId) => {
          appendLog(projectId, 'Không tìm thấy domain ở trang hiện tại, đang chuyển sang trang kế ...')
        })

        socket.on('send-id', async (id) => {
          console.log('server-send-id: ' + id);
          await localStorage.setItem('id', id);
          await sendNewSocketAndUserID();
        })

        socket.on('changing-agent-backlink', (projectId) => {
          console.log('id nhan dc: ' + projectId);
          appendLog(projectId, 'Đang thay đổi user agent ...');
        })

        socket.on('agent-backlink', (data) => {
          $(`span[agent="${data.projectId}"]`).text(data.data);
          appendLog(data.projectId, 'User agent hiện tại: ' + data.data);
        })

        socket.on('send-domain-backlink', (data) => {
          appendLog(data.projectId, 'Đang truy cập: ' + data.backlink);
        })

        socket.on('finding-backlink', (data) => {
          appendLog(data.projectId, `Đang tìm kiếm đường dẫn đến site chính trên trang ${data.urlBacklink}`)
        })

        socket.on('found-backlink', (data) => {
          appendLog(data.projectId, `Đã tìm thấy url site chính, đang truy cập ${data.mainURL}`);
        })

        socket.on('not-found-backlink', (projectId) => {
          appendLog(projectId, 'Không tìm thấy site chính trong backlink , vui lòng thử lại sau !!!');
        })

        socket.on('send-random-url', data => {
          appendLog(data.projectId, 'Đang click url ngẫu nhiên trên trang ...');
          appendLog(data.projectId, 'URL hiện tại: ' + data.url);
        })

        socket.on('not-found-keyword-backlink', data => {
          appendLog(data.projectId, 'Không tìm thấy url cần view trên trang' + data.urlBacklink);
        })

        socket.on('dead-proxy', data => {
          appendLog(data.projectId, 'IP die, đang đổi ip khác');
        })
      </script>

      <script async>
        socket.on('not-found-ad', data => {
          appendLog(data.projectId, 'url backlink không hợp lệ hoặc không tìm thấy bất kì url quảng cáo nào trùng khớp, vui lòng kiểm tra lại !!!');
        })

        socket.on('not-found-single-ad', data => {
          appendLog(data.projectId, `Không tìm thấy url quảng cáo "${data.adURL}" hoặc url trang chứa quảng cáo không hợp lệ`);
        })

        socket.on('send-changing-agent-ad', data => {
          appendLog(data.projectId, 'Đang thay đổi user agent ...');
        })

        socket.on('send-current-agent-ad', data => {
          $(`span[agent=${data.projectId}]`).text(data.agent);
          appendLog(data.projectId, `User agent hiện tại: ${data.agent}`);
        })

        socket.on('send-gotodomain-ad', data => {
          appendLog(data.projectId, `Đang truy cập "${data.domain}"`);
        })

        socket.on('send-found-ad', data => {
          appendLog(data.projectId, `Đã tìm thấy url quảng cáo : ${data.adURL}, đang truy cập ...`);
        })

        socket.on('send-stop-suggest', data => {
          console.log('stopped')
          appendLog(data.projectId, `Đã dừng`);
          location.reload();
        })

        socket.on('send-stop-ad', data => {
          console.log('stopped')
          appendLog(data.projectId, `Đã dừng`);
          location.reload();
        })

        socket.on('send-stop-backlink', data => {
          console.log('stopped')
          appendLog(data.projectId, `Đã dừng`);
          location.reload();
        })

        socket.on('send-invalid-backlink', data => {
          location.reload();
        })

        socket.on('send-invalid-domain-ad', data => {
          alert('asdfasdf')
          console.log('dmddmmdsmmm')
          //location.reload();
        })

        socket.on('send-test', projectId => {
          console.log('dm')
        })





      </script>

      <script async>
        /**
          * run suggest tool
          * id: projectid
          * isRunNow {boolean} run now or run later (base on schedule)
         */
        const runSuggestTool = (id, isRunNow) => {

          $('#listLogSuggest').empty();
          $(`#btnRun-${id}`).attr("disabled", true);
          window.location.href = '/';
          $.post("/suggest",
            {
              userid: localStorage.getItem('userid'),
              projectId: id,
              isRunNow: isRunNow,
              day: $('#date_suggest').val().split('-')[2],
              month: $('#date_suggest').val().split('-')[1],
              hour: $('#clock_suggest').val().split(':')[0],
              minute: $('#clock_suggest').val().split(':')[1],
              second: 0
            },
            function (data, status) {
              //console.log(data);
            });
        }

        /**
        * run backlink project
        * id: projectid
        * isRunNow {boolean} run now or run later (base on schedule)
        */
        const runBackLinkTool = (id, isRunNow) => {


          $(`#btnBackLinkRun-${id}`).attr("disabled", true);

          window.location.href = '/';

          $.post("/backlink",
            {
              userid: localStorage.getItem('userid'),
              projectId: id,
              isRunNow: isRunNow,
              day: $('#date_backlink').val().split('-')[2],
              month: $('#date_backlink').val().split('-')[1],
              hour: $('#clock_backlink').val().split(':')[0],
              minute: $('#clock_backlink').val().split(':')[1],
              second: 0
            },
            function (data, status) {

              // console.log(data);
            });
        }

        const isOverMaxKeyword = (max) => {

          let numberOfKeyword = $('#suggestKeyword').val().split('\n').length;
          if (numberOfKeyword > max) return true;

          return false;
        }

        /*
        * save susggest project
        */
        function saveProject() {
          let validate = CheckValideSuggest();
          if (validate.err) {
            alert("Vui lòng nhập " + validate.message);
            return false;
          }

          if (isOverMaxKeyword(15) == false) {

            $.post("/addproject",
              {
                keyword: JSON.stringify($('#suggestKeyword').val().split('\n')),
                domain: $('#domain').val(),
                isAutochangeUserAgent: JSON.parse($('#useragent').is(":checked")),
                delay: $('#delay-suggest').val(),
                amount: $('#suggestTime').val(),
                socketID: localStorage.getItem('id'),
                name: $('#projectName').val(),
                searchTool: $('#searchingTools').val()
              },
              function (data, status) {
                window.location.href = '/';
              });
          }
          else {

            alert('Số lượng keyword không được vượt quá 15');
          }


        }
        //view suggest project
        function viewProject(id) {
          $('#view-logBox').children(0).attr("id", id);
          $('#currentUserAgent').attr('agent', id);
          $.get(`/project/${id}`).done(function (data) {
            $('#view-projectName').text(data.name);
            //$('#view-suggestKeyword').text(data.keyword);
            $('#view-domain').text(data.domain);
            $('#view-delay-suggest').text(data.delay);
            $('#view-suggestTime').text(data.amount);
            $('#view-searchingTools').text(data.searchTool);

            data.keyword.map(item => {

              $('#view-suggestKeyword').val($('#view-suggestKeyword').val() + `\n${item}`);
            })

            data.log.map((item) => {
              $(`#${id}`).prepend(`<li>${item.message}</li>`);
            })

          })
        }
      </script>
      <script async>

        //view backlink project
        function viewBackProject(id) {

          //set up some id to render view detail
          $('#viewLogbox_backlink').children(0).attr("id", id);
          $('#currentAgent_backlink').attr('agent', id);

          $.get(`/backlinkproject/${id}`).done(function (data) {
            $('#view-main_url_backlink').text(data.mainURL);
            $('#view-keyword').text(data.keyword);
            $('#view-delay_backink').text(data.delay);
            $('#view-amount_backlink').text(data.amount);

            data.urlBacklink.map(item => {
              $('#view-url_backlink').val($('#view-url_backlink').val() + `\n${item}`);
            })
            data.log.map((item) => {
              $(`#${id}`).prepend(`<li>${item.message}</li>`);
            })

          })
        }
        //valide data
        function CheckValide(listInput) {
          listInput.forEach(element => {
            element.css("border-color", "#E3E3E3");
          });
          for (let element of listInput) {
            if (element.val() == "") {
              element.focus();
              element.css("border-color", "red")
              return { err: true, message: element.attr('data-focus') };
            }
          }
          return { err: false };
        }
        //valide data Back link
        function CheckValideBackLink() {
          let domainBacklink = $('#domain_backlink');
          let backlink = $('#backlink');
          let delayBackLink = $('#delay_backink');

          return (CheckValide([domainBacklink, backlink, delayBackLink]));
        }
        //valide data suggest
        function CheckValideSuggest() {
          let suggestKeyword = $('#suggestKeyword');
          let domain = $('#domain');
          let delaySuggest = $('#delay-suggest');
          let projectName = $("#projectName")
          return (CheckValide([projectName, suggestKeyword, domain, delaySuggest]));
        }

        //validate data click ad
        function CheckValideAD() {
          let name = $('#projectName_ad');
          let main_url = $('#main_url_ad');
          let ad_url = $('#ad_url');
          let delay = $("#delay_ad")
          return (CheckValide([name, main_url, ad_url, delay]));
        }

        // accept only positve number in input
        function acceptPositiveNumber(event) {
          return (event.charCode >= 48 && event.charCode <= 57) ? true : event.preventDefault();
        }
        //append log
        function appendLog(projectId, messageLog) {
          let timeLog = new Date();
          let log = `${timeLog.getHours() > 10 ? timeLog.getHours() : '0' + timeLog.getHours()}:`
            + `${timeLog.getMinutes() > 10 ? timeLog.getMinutes() : '0' + timeLog.getMinutes()}:`
            + `${timeLog.getSeconds() > 10 ? timeLog.getSeconds() : '0' + timeLog.getSeconds()}:`
            + `  ${messageLog}`;
          $(`#${projectId}`).prepend(`<li>${log}</li>`);
        }



        const sendNewSocketAndUserID = () => {
          $.post("/sendSocket",
            {
              userid: localStorage.getItem('userid'),
              socketid: localStorage.getItem('id')
            },
            function (data, status) {

            });
        }

        const isOverMaxBacklink = (max) => {

          let num = $('#url_backlink').val().split('\n').length;

          if (num > max) return true;

          return false;
        }

        const saveBackLinkProject = () => {

          let validate = CheckValideBackLink();
          if (validate.err) {
            alert("Vui lòng nhập " + validate.message);
            return false;
          }

          if (isOverMaxBacklink(30) == false && filterYoutube($('#url_backlink').val().split('\n'))) {

            $.post("/saveProjectBacklink",
              {
                urlBacklink: JSON.stringify($('#url_backlink').val().split('\n')),
                mainURL: $('#main_url').val(),
                delay: $('#delay_backink').val(),
                amount: $('#amount_backlink').val(),
                name: $('#projectName_backlink').val()
              },
              function (data, status) {
                window.location.href = '/';
              });
          }
          else {
            alert('Số backlink không được vượt quá 30, các backlink không được chứa link youtube')
          }

        }

        //save new ad project
        const saveAD = () => {

          let validate = CheckValideAD();
          if (validate.err) {
            alert("Vui lòng nhập  " + validate.message);
            return false;
          }

          $.post("/saveAdProject",
            {
              adURL: JSON.stringify($('#ad_url').val().split('\n')),
              domain: $('#main_url_ad').val(),
              delay: $('#delay_ad').val(),
              amount: $('#amount_ad').val(),
              name: $('#projectName_ad').val()
            },
            function (data, status) {
              window.location.href = '/';
            });
        }

        const viewAdProject = (id) => {

          //set up some id to render view detail
          $('#viewLogbox_ad').children(0).attr("id", id);
          $('#currentAgent_ad').attr('agent', id);

          $.get(`/ad/${id}`).done(function (data) {
            $('#view-name_ad').text(data.name);
            //$('#view-ad_url').text(data.adURL);
            $('#view-main_url_ad').text(data.domain);
            $('#view-delay_ad').text(data.delay);
            $('#view-amount_ad').text(data.amount);

            data.adURL.map(item => {

              $('#view-ad_url').val($('#view-ad_url').val() + `\n${item}`);
            })

            data.log.map((item) => {
              $(`#${id}`).prepend(`<li>${item.message}</li>`);
            })

          })
        }

        /**
         * run click ad tool
        * id: projectid
        * isRunNow {boolean} run now or run later (base on schedule)
        */
        const runAdLinkTool = (id, isRunNow) => {

          $(`#btnADRun-${id}`).attr("disabled", true);

          window.location.href = '/';

          $.post("/clickAd",
            {
              userid: localStorage.getItem('userid'),
              projectId: id,
              isRunNow: isRunNow,
              day: $('#date_ad').val().split('-')[2],
              month: $('#date_ad').val().split('-')[1],
              hour: $('#clock_ad').val().split(':')[0],
              minute: $('#clock_ad').val().split(':')[1],
              second: 0
            },
            function (data, status) {

              //console.log(data);
            });
        }


        const deleteSuggest = (id) => {

          $.get(`/deleteSuggest/${id}`).done(function (data) {

            location.reload();
          })
        }

        const deleteBacklink = (id) => {

          $.get(`/deleteBacklink/${id}`).done(function (data) {

            location.reload();
          })
        }

        const deleteAD = (id) => {

          $.get(`/deleteAD/${id}`).done(function (data) {

            location.reload();
          })
        }

        const stopSuggest = (id) => {
          console.log('stop functin')
          $.get(`/stopSuggest/${id}`).done(function (data) {

            location.reload();
          })
        }

        const stopAD = (id) => {
          console.log('stop functin')
          $.get(`/stopAD/${id}`).done(function (data) {

            location.reload();
          })
        }

        const stopBacklink = (id) => {
          console.log('stop functin')
          $.get(`/stopBacklink/${id}`).done(function (data) {

            location.reload();
          })
        }
      </script>
      <script async>
        const validateTimeSuggest = () => {
          let clock_suggest = $("#clock_suggest");
          let date_suggest = $('#date_suggest');
          return (CheckValide([clock_suggest, date_suggest]));
        }

        const validateTimeRunBacklink = () => {
          let clock_backlink = $("#clock_backlink");
          let date_backlink = $('#date_backlink');
          return (CheckValide([clock_backlink, date_backlink]));
        }
        const validateTimeRunAD = () => {
          let clock_ad = $("#clock_ad");
          let date_ad = $('#date_ad');
          return (CheckValide([clock_ad, date_ad]));
        }

      </script>
</body>

<!-- Mirrored from coderthemes.com/adminto/vertical_dark/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 21 Mar 2019 13:15:13 GMT -->

</html>